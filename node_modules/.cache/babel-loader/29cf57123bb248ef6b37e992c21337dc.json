{"ast":null,"code":"var _jsxFileName = \"/Users/reuben/Desktop/school/osu/capstone/synapse-project/src/changeHandle.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass ChangeHandle extends Component {\n  async refresh() {\n    this.forceUpdate();\n  }\n\n  async componentDidMount() {\n    this.forceUpdate();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAvail: false\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isAvail: true\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        this.props.changeHandle(this.user.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: input => this.user = input,\n      type: \"text\",\n      className: \"\",\n      placeholder: \"New handle?\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      hidden: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Check Username\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChangeHandle;","map":{"version":3,"sources":["/Users/reuben/Desktop/school/osu/capstone/synapse-project/src/changeHandle.js"],"names":["React","Component","ChangeHandle","refresh","forceUpdate","componentDidMount","constructor","props","state","isAvail","handleClick","bind","setState","render","event","preventDefault","changeHandle","user","value","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAGA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAEnC,QAAME,OAAN,GAAgB;AACd,SAAKC,WAAL;AACD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,SAAKD,WAAL;AACD;;AAEDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAb,CAFiB,CAIjB;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,SAAKE,QAAL,CAAcJ,KAAK,KAAK;AACtBC,MAAAA,OAAO,EAAE;AADa,KAAL,CAAnB;AAGD;;AAIDI,EAAAA,MAAM,GAAG;AACP,WAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAM,MAAA,QAAQ,EAAGC,KAAD,IAAW;AACzBA,QAAAA,KAAK,CAACC,cAAN;AACA,aAAKR,KAAL,CAAWS,YAAX,CAAwB,KAAKC,IAAL,CAAUC,KAAlC;AACD,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAO,MAAA,GAAG,EAAGC,KAAD,IAAW,KAAKF,IAAL,GAAYE,KAAnC;AAA0C,MAAA,IAAI,EAAC,MAA/C;AAAsD,MAAA,SAAS,EAAC,EAAhE;AAAmE,MAAA,WAAW,EAAC,aAA/E;AAA6F,MAAA,QAAQ,MAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,MAAM,EAAE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AAAQ,MAAA,OAAO,EAAE,KAAKT,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,CAFF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CAJF;AAsBD;;AAjDkC;;AAoDrC,eAAeR,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\n\n\nclass ChangeHandle extends Component {\n\n  async refresh() {\n    this.forceUpdate()\n  }\n\n  async componentDidMount() {\n    this.forceUpdate()\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {isAvail: false};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isAvail: true\n    }));\n  }\n\n\n\n  render() {\n    return (\n\n\n\n      <div>\n\n        <form onSubmit={(event) => {\n          event.preventDefault()\n          this.props.changeHandle(this.user.value)\n        }}>\n          <input ref={(input) => this.user = input} type=\"text\" className=\"\" placeholder=\"New handle?\" required />\n          <input type=\"submit\" hidden={false} />\n          <br />\n          <button onClick={this.handleClick}>\n            Check Username\n          </button>\n        </form>\n\n        <hr/>\n\n      </div>\n    );\n  }\n}\n\nexport default ChangeHandle;\n"]},"metadata":{},"sourceType":"module"}
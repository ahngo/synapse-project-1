{"ast":null,"code":"var _jsxFileName = \"/Users/reuben/Desktop/school/osu/capstone/synapse-project/src/pages/profile.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport '../App.css';\nimport Web3 from 'web3'; //import { SYNAPSE_ABI, SYNAPSE_ADDRESS } from '../config'\n//import { PROFILE_ABI, PROFILE_ADDRESS } from '../config'\n\nimport { BIO_ABI, BIO_ADDRESS } from '../config';\nimport ReactTooltip from 'react-tooltip';\n\nfunction isInstalled() {\n  if (typeof Web3 !== 'undefined') {\n    console.log('MetaMask is installed');\n  } else {\n    console.log('MetaMask is not installed');\n  }\n}\n\nfunction isLocked(web3) {\n  web3.eth.getAccounts(function (err, accounts) {\n    if (err != null) {\n      console.log(err);\n    } else if (accounts.length === 0) {\n      console.log('MetaMask is locked');\n    } else {\n      console.log('MetaMask is unlocked');\n    }\n  });\n}\n\nclass Profile extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.getBioText();\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    document.title = \"Synapse App\";\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n\n  async componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\"); //const web3 = new Web3(window.web3.currentProvider);\n\n    isInstalled();\n    isLocked(web3); //await ethereum.enable();\n    //const synapse = new web3.eth.Contract(SYNAPSE_ABI, SYNAPSE_ADDRESS)\n    //const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS)\n\n    const bio = new web3.eth.Contract(BIO_ABI, BIO_ADDRESS);\n    this.setState({\n      bio\n    });\n    const accounts = await web3.eth.getAccounts(); //const balanceWei = await web3.eth.getBalance(accounts[0])\n    //var balance = balanceWei/1000000000000000000\n\n    this.setState({\n      account: accounts[0]\n    });\n  }\n\n  async refresh() {\n    this.forceUpdate();\n  }\n\n  async getBioText() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const bio = new web3.eth.Contract(BIO_ABI, BIO_ADDRESS);\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    bio.methods.getBio(accounts[0]).call({\n      from: accounts[0]\n    }).then(val => this.setState({\n      currentBio: val\n    }));\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      balance: '',\n      myString: '',\n      thoughts: [],\n      handle: 0,\n      loading: true,\n      currentBio: \"Loading..\"\n    };\n    this.updateBioText = this.updateBioText.bind(this);\n    this.getBioText = this.getBioText.bind(this);\n  }\n\n  updateBioText(string) {\n    this.setState({\n      loading: true\n    });\n    this.state.bio.methods.updateBio(string).send({\n      from: this.state.account\n    }).once('receipt', receipt => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      role: \"main\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Address: \", React.createElement(\"p\", {\n      \"data-tip\": this.state.currentBio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \" \", this.state.account, \" \"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Current Bio: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(ReactTooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      size: \"50\",\n      \"text-align\": \"center\",\n      readonly: true,\n      value: this.state.currentBio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        this.updateBioText(this.user.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: input => this.user = input,\n      type: \"text\",\n      className: \"\",\n      placeholder: \"Update bio\",\n      maxlength: \"200\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), \"\\xA0\", React.createElement(\"input\", {\n      type: \"submit\",\n      hidden: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/reuben/Desktop/school/osu/capstone/synapse-project/src/pages/profile.js"],"names":["React","Component","ReactDOM","Web3","BIO_ABI","BIO_ADDRESS","ReactTooltip","isInstalled","console","log","isLocked","web3","eth","getAccounts","err","accounts","length","Profile","componentWillMount","loadWeb3","loadBlockchainData","getBioText","forceUpdate","componentDidMount","document","title","window","ethereum","enable","currentProvider","alert","componentWillUnmount","clearInterval","interval","givenProvider","bio","Contract","setState","account","refresh","methods","getBio","call","from","then","val","currentBio","constructor","props","state","balance","myString","thoughts","handle","loading","updateBioText","bind","string","updateBio","send","once","receipt","render","event","preventDefault","user","value","input"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport '../App.css'\r\nimport Web3 from 'web3'\r\n//import { SYNAPSE_ABI, SYNAPSE_ADDRESS } from '../config'\r\n//import { PROFILE_ABI, PROFILE_ADDRESS } from '../config'\r\nimport { BIO_ABI, BIO_ADDRESS } from '../config'\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\n\r\n\r\nfunction isInstalled() {\r\n   if (typeof Web3 !== 'undefined'){\r\n      console.log('MetaMask is installed')\r\n   }\r\n   else{\r\n      console.log('MetaMask is not installed')\r\n   }\r\n}\r\n\r\nfunction isLocked(web3) {\r\n   web3.eth.getAccounts(function(err, accounts){\r\n      if (err != null) {\r\n         console.log(err)\r\n      }\r\n      else if (accounts.length === 0) {\r\n         console.log('MetaMask is locked')\r\n      }\r\n      else {\r\n         console.log('MetaMask is unlocked')\r\n      }\r\n   });\r\n}\r\n\r\nclass Profile extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n    await this.getBioText()\r\n    this.forceUpdate()\r\n  }\r\n\r\n  componentDidMount(){\r\n    document.title = \"Synapse App\"\r\n    \r\n    \r\n  }\r\n  \r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n  \r\n  async componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n  \r\n  \r\n  async loadBlockchainData() {\r\n\r\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\r\n\r\n    //const web3 = new Web3(window.web3.currentProvider);\r\n\r\n    isInstalled();\r\n    isLocked(web3);\r\n\r\n    //await ethereum.enable();\r\n\r\n    //const synapse = new web3.eth.Contract(SYNAPSE_ABI, SYNAPSE_ADDRESS)\r\n    //const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS)\r\n    const bio = new web3.eth.Contract(BIO_ABI, BIO_ADDRESS)\r\n    this.setState({ bio })\r\n    \r\n    const accounts = await web3.eth.getAccounts()\r\n    //const balanceWei = await web3.eth.getBalance(accounts[0])\r\n    \r\n    \r\n    //var balance = balanceWei/1000000000000000000\r\n    \r\n    this.setState({ account: accounts[0]})\r\n    \r\n\r\n  }\r\n    \r\n  async refresh() {\r\n    this.forceUpdate()\r\n  }\r\n  \r\n  async getBioText() {\r\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\r\n      const bio = new web3.eth.Contract(BIO_ABI, BIO_ADDRESS)\r\n      const accounts = await web3.eth.getAccounts() \r\n      this.setState({ account: accounts[0]})\r\n      \r\n      bio.methods.getBio(accounts[0]).call({ from: accounts[0]}).then(val => this.setState({ currentBio: val }));\r\n\r\n  }\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      balance: '',\r\n      myString: '',\r\n      thoughts: [],\r\n      handle: 0,\r\n      loading: true,\r\n      currentBio: \"Loading..\"     \r\n    }\r\n    this.updateBioText = this.updateBioText.bind(this)\r\n    this.getBioText = this.getBioText.bind(this)\r\n    \r\n  }\r\n  \r\n  updateBioText(string) {\r\n\r\n    this.setState({ loading: true })\r\n    this.state.bio.methods.updateBio(string).send({ from: this.state.account })\r\n    .once('receipt', (receipt) => {\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n  \r\n  \r\n  render() {\r\n    return (\r\n    <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <main role=\"main\" className=\"\">\r\n        \r\n        Address: <p data-tip= { this.state.currentBio } > { this.state.account } </p>\r\n        <form>\r\n          <label>\r\n            Current Bio: <br />\r\n            <ReactTooltip />\r\n            <input type=\"text\" name=\"name\" size=\"50\" text-align=\"center\" readonly value= { this.state.currentBio } />\r\n          </label>\r\n          \r\n        </form>\r\n\r\n        <hr />\r\n        \r\n        \r\n        \r\n        <form onSubmit={(event) => {\r\n          event.preventDefault()\r\n          this.updateBioText(this.user.value)\r\n        }}>\r\n          <input ref={(input) => this.user = input} type=\"text\" className=\"\" placeholder=\"Update bio\" maxlength=\"200\" required />\r\n          &nbsp;\r\n          <input type=\"submit\" hidden={false} />\r\n        </form>\r\n\r\n          </main>\r\n        </header>\r\n      </div>\r\n\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/reuben/Desktop/school/osu/capstone/synapse-project/src/pages/settings.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport '../App.css';\nimport logo from '../public/home/logo.png';\nimport text from '../public/home/text.png';\nimport { SYNAPSE_ABI, SYNAPSE_ADDRESS } from '../config';\nimport { PROFILE_ABI, PROFILE_ADDRESS } from '../config';\nimport ChangeHandle from '../changeHandle.js';\nimport { BIO_ABI, BIO_ADDRESS } from '../config';\nimport ReactTooltip from 'react-tooltip';\nimport Logo from '../components/logo.js';\n\nfunction isInstalled() {\n  if (typeof Web3 !== 'undefined') {\n    console.log('MetaMask is installed');\n  } else {\n    console.log('MetaMask is not installed');\n  }\n}\n\nfunction isLocked(web3) {\n  web3.eth.getAccounts(function (err, accounts) {\n    if (err != null) {\n      console.log(err);\n    } else if (accounts.length === 0) {\n      console.log('MetaMask is locked');\n    } else {\n      console.log('MetaMask is unlocked');\n    }\n  });\n}\n\nclass Settings extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.getBioText();\n    await this.getOwnHandle();\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    document.title = \"Synapse App\";\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n\n  async componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\"); //const web3 = new Web3(window.web3.currentProvider);\n\n    isInstalled();\n    isLocked(web3); //await ethereum.enable();\n\n    const synapse = new web3.eth.Contract(SYNAPSE_ABI, SYNAPSE_ADDRESS);\n    const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS);\n    const accounts = await web3.eth.getAccounts();\n    const balanceWei = await web3.eth.getBalance(accounts[0]);\n    const bio = new web3.eth.Contract(BIO_ABI, BIO_ADDRESS);\n    this.setState({\n      profile\n    });\n    this.setState({\n      thoughtCount\n    });\n    this.setState({\n      bio\n    });\n    var balance = balanceWei / 1000000000000000000;\n    var thoughtCount = await profile.methods.thoughtCount().call();\n    const latestCall = await profile.methods.thoughts(thoughtCount - 1).call();\n    const latest = latestCall.thought;\n\n    if (thoughtCount < 5) {\n      for (var i = thoughtCount - 1; i >= 0; i--) {\n        const singleThought = await profile.methods.thoughts(i).call();\n        this.setState({\n          thoughts: [...this.state.thoughts, singleThought] //thoughts: [...this.setState({thoughts: [...this.state.thoughts, singleThought]})]\n\n        });\n      }\n    } else {\n      for (var i = thoughtCount - 1; i >= thoughtCount - 5; i--) {\n        const singleThought = await profile.methods.thoughts(i).call();\n        this.setState({\n          thoughts: [...this.state.thoughts, singleThought]\n        });\n      }\n    }\n\n    this.setState({\n      account: accounts[0],\n      balance: balance,\n      latest: latest\n    });\n    this.setState({\n      loading: false\n    });\n  }\n\n  async getBioText() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const bio = new web3.eth.Contract(BIO_ABI, BIO_ADDRESS);\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    bio.methods.getBio(accounts[0]).call({\n      from: accounts[0]\n    }).then(val => this.setState({\n      currentBio: val\n    }));\n  }\n\n  async getOwnHandle() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS);\n    const accounts = await web3.eth.getAccounts();\n    let curHandle = \"\";\n    profile.methods.getOwnHandle().call({\n      from: accounts[0]\n    }).then(val => {\n      if (val === undefined || val === null || val === \"\") {\n        this.setState({\n          currentHandle: \"Anonymous\"\n        });\n      } else {\n        this.setState({\n          currentHandle: val\n        });\n      }\n    }, reason => {});\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      balance: '',\n      myString: '',\n      thoughts: [],\n      handle: 0,\n      loading: true,\n      handleCheck: false,\n      currentBio: \"Loading..\",\n      currentHandle: \"Loading..\"\n    };\n    this.createThought = this.createThought.bind(this);\n    this.changeHandle = this.changeHandle.bind(this);\n    this.updateBioText = this.updateBioText.bind(this);\n    this.getBioText = this.getBioText.bind(this);\n    this.getOwnHandle = this.getOwnHandle.bind(this);\n  }\n\n  updateBioText(string) {\n    this.setState({\n      loading: true\n    });\n    this.state.bio.methods.updateBio(string).send({\n      from: this.state.account\n    }).once('receipt', receipt => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  handleChangeRender() {\n    if (this.state.handle == 1) {\n      return React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"New user!\"));\n    } else if (this.state.handle == 2) {\n      return React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Worked!\"));\n    } else if (this.state.handle == 3) {\n      return React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Taken!\"));\n    }\n  }\n\n  createThought(string) {\n    //const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS)\n    this.setState({\n      loading: true\n    });\n    this.state.profile.methods.createThought(string).send({\n      from: this.state.account\n    }).once('receipt', receipt => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  updateHandle(string) {\n    this.setState({\n      loading: true\n    });\n    this.state.profile.methods.updateUser(string).send({\n      from: this.state.account\n    }).once('receipt', receipt => {\n      this.setState({\n        loading: false\n      });\n    });\n    console.log(\"Handle changed to \" + string + \" !\");\n  }\n\n  stateChanger() {}\n\n  async changeHandle(string) {\n    this.setState({\n      loading: true\n    });\n    var handleChecker = 1;\n    var handleCount = await this.state.profile.methods.numHandles().call();\n    var curHandle = await this.state.profile.methods.handleList(string).call();\n    console.log(curHandle);\n\n    if (curHandle == 1) {\n      this.setState({\n        handleCheck: true\n      });\n      console.log(\"taken!\");\n      this.stateChanger();\n    } else {\n      this.setState({\n        handleCheck: false\n      });\n      this.updateHandle(string);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      bal: this.state.balance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      role: \"main\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Address: \", React.createElement(\"p\", {\n      \"data-tip\": this.state.currentBio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \" \", this.state.account, \" \"), React.createElement(ReactTooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Current Bio: \", this.state.currentBio, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), \"Current Handle: \", this.state.currentHandle, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        this.updateBioText(this.user.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: input => this.user = input,\n      type: \"text\",\n      className: \"\",\n      placeholder: \"Update bio?\",\n      maxlength: \"200\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), \"\\xA0\", React.createElement(\"input\", {\n      type: \"submit\",\n      hidden: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), React.createElement(ChangeHandle, {\n      changeHandle: this.changeHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), this.state.handleCheck ? React.createElement(\"div\", {\n      id: \"loader\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Username taken! Please try another\")) : React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), this.handleChangeRender())));\n  }\n\n}\n\nexport default Settings;","map":{"version":3,"sources":["/Users/reuben/Desktop/school/osu/capstone/synapse-project/src/pages/settings.js"],"names":["React","Component","Web3","logo","text","SYNAPSE_ABI","SYNAPSE_ADDRESS","PROFILE_ABI","PROFILE_ADDRESS","ChangeHandle","BIO_ABI","BIO_ADDRESS","ReactTooltip","Logo","isInstalled","console","log","isLocked","web3","eth","getAccounts","err","accounts","length","Settings","componentWillMount","loadWeb3","loadBlockchainData","getBioText","getOwnHandle","forceUpdate","componentDidMount","document","title","window","ethereum","enable","currentProvider","alert","componentWillUnmount","clearInterval","interval","givenProvider","synapse","Contract","profile","balanceWei","getBalance","bio","setState","thoughtCount","balance","methods","call","latestCall","thoughts","latest","thought","i","singleThought","state","account","loading","getBio","from","then","val","currentBio","curHandle","undefined","currentHandle","reason","constructor","props","myString","handle","handleCheck","createThought","bind","changeHandle","updateBioText","string","updateBio","send","once","receipt","handleChangeRender","updateHandle","updateUser","stateChanger","handleChecker","handleCount","numHandles","handleList","render","event","preventDefault","user","value","input"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport '../App.css'\nimport logo from '../public/home/logo.png';\nimport text from '../public/home/text.png';\nimport { SYNAPSE_ABI, SYNAPSE_ADDRESS } from '../config'\nimport { PROFILE_ABI, PROFILE_ADDRESS } from '../config'\nimport ChangeHandle from '../changeHandle.js'\nimport { BIO_ABI, BIO_ADDRESS } from '../config'\nimport ReactTooltip from 'react-tooltip'\nimport Logo from '../components/logo.js'\n\n\nfunction isInstalled() {\n   if (typeof Web3 !== 'undefined'){\n      console.log('MetaMask is installed')\n   }\n   else{\n      console.log('MetaMask is not installed')\n   }\n}\n\nfunction isLocked(web3) {\n   web3.eth.getAccounts(function(err, accounts){\n      if (err != null) {\n         console.log(err)\n      }\n      else if (accounts.length === 0) {\n         console.log('MetaMask is locked')\n      }\n      else {\n         console.log('MetaMask is unlocked')\n      }\n   });\n}\n\n\nclass Settings extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    await this.getBioText()\n    await this.getOwnHandle()\n    this.forceUpdate()\n  }\n\n  componentDidMount(){\n    document.title = \"Synapse App\"\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async componentWillUnmount() {\n  clearInterval(this.interval);\n  }\n\n\n  async loadBlockchainData() {\n\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n\n    //const web3 = new Web3(window.web3.currentProvider);\n\n    isInstalled();\n    isLocked(web3);\n\n    //await ethereum.enable();\n\n    const synapse = new web3.eth.Contract(SYNAPSE_ABI, SYNAPSE_ADDRESS)\n    const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS)\n\n    const accounts = await web3.eth.getAccounts()\n    const balanceWei = await web3.eth.getBalance(accounts[0])\n    const bio = new web3.eth.Contract(BIO_ABI, BIO_ADDRESS)\n    \n    this.setState({ profile })\n    this.setState({ thoughtCount })\n    this.setState({ bio })\n\n    var balance = balanceWei/1000000000000000000\n\n    var thoughtCount = await profile.methods.thoughtCount().call()\n\n    const latestCall = await profile.methods.thoughts(thoughtCount-1).call()\n    const latest = latestCall.thought\n\n\n    if (thoughtCount < 5) {\n      for (var i = thoughtCount-1; i >= 0; i--) {\n        const singleThought = await profile.methods.thoughts(i).call()\n        this.setState({\n          thoughts: [...this.state.thoughts, singleThought]\n          //thoughts: [...this.setState({thoughts: [...this.state.thoughts, singleThought]})]\n        })\n      }\n    }\n    else {\n      for (var i = thoughtCount-1; i >= (thoughtCount-5); i--) {\n        const singleThought = await profile.methods.thoughts(i).call()\n        this.setState({\n          thoughts: [...this.state.thoughts, singleThought]\n        })\n      }\n    }\n\n\n    this.setState({ account: accounts[0], balance: balance, latest: latest })\n    this.setState({ loading: false })\n\n  }\n\n  async getBioText() {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n      const bio = new web3.eth.Contract(BIO_ABI, BIO_ADDRESS)\n      const accounts = await web3.eth.getAccounts() \n      this.setState({ account: accounts[0]})\n      \n      bio.methods.getBio(accounts[0]).call({ from: accounts[0]}).then(val => this.setState({ currentBio: val }));\n  }\n  \n  async getOwnHandle() {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n      const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS)\n      const accounts = await web3.eth.getAccounts()       \n      \n      let curHandle = \"\";\n      \n      profile.methods.getOwnHandle().call({ from: accounts[0]}).then(val => {\n          if (val === undefined || val === null || val === \"\")\n          {\n            this.setState({ currentHandle: \"Anonymous\" });\n          }\n          else \n          {\n              this.setState({ currentHandle: val });\n          }          \n      }, reason => {});\n  }\n  \n      \n      \n      \n      \n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      balance: '',\n      myString: '',\n      thoughts: [],\n      handle: 0,\n      loading: true,\n      handleCheck: false,\n      currentBio: \"Loading..\"  ,\n      currentHandle: \"Loading..\"\n    }\n    \n    this.createThought = this.createThought.bind(this)\n    this.changeHandle = this.changeHandle.bind(this)\n    this.updateBioText = this.updateBioText.bind(this)\n    this.getBioText = this.getBioText.bind(this)\n    this.getOwnHandle = this.getOwnHandle.bind(this)\n  }\n\n  updateBioText(string) {\n\n    this.setState({ loading: true })\n    this.state.bio.methods.updateBio(string).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  \n  handleChangeRender() {\n    if (this.state.handle == 1) {\n      return <div id=\"loader\" className=\"\"><p className=\"\">New user!</p></div>\n    }\n\n    else if (this.state.handle == 2) {\n      return <div id=\"loader\" className=\"\"><p className=\"\">Worked!</p></div>\n    }\n\n    else if (this.state.handle == 3) {\n      return <div id=\"loader\" className=\"\"><p className=\"\">Taken!</p></div>\n    }\n  }\n\n  createThought(string) {\n\n    //const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS)\n\n    this.setState({ loading: true })\n    this.state.profile.methods.createThought(string).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState(\n        { loading: false})\n    })\n\n  }\n\n\n  updateHandle(string) {\n\n    this.setState({ loading: true })\n    this.state.profile.methods.updateUser(string).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n\n    console.log (\"Handle changed to \" + string + \" !\")\n\n  }\n\n  stateChanger() {\n\n  }\n\n  async changeHandle(string) {\n\n    this.setState({ loading: true })\n\n    var handleChecker = 1;\n\n    var handleCount = await this.state.profile.methods.numHandles().call()\n\n    var curHandle = await this.state.profile.methods.handleList(string).call()\n\n    console.log(curHandle)\n\n    if (curHandle == 1) {\n      this.setState({ handleCheck: true })\n      console.log (\"taken!\")\n      this.stateChanger()\n    }\n\n    else {\n      this.setState({ handleCheck: false })\n      this.updateHandle(string)\n    }\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <Logo bal={this.state.balance}/>\n          <main role=\"main\" className=\"\">\n            Address: <p data-tip= { this.state.currentBio } > { this.state.account } </p>\n            <ReactTooltip />\n            <form>\n              <label>\n                Current Bio: { this.state.currentBio } <br />\n                Current Handle: { this.state.currentHandle } <br />\n                \n              </label>          \n            </form>\n            <hr />\n            <form onSubmit={(event) => {\n          event.preventDefault()\n          this.updateBioText(this.user.value)\n        }}>\n          <input ref={(input) => this.user = input} type=\"text\" className=\"\" placeholder=\"Update bio?\" maxlength=\"200\" required />\n          &nbsp;\n          <input type=\"submit\" hidden={false} />\n        </form>\n        <hr />\n              <ChangeHandle\n                changeHandle={this.changeHandle}\n               />\n\n               { this.state.handleCheck\n                 ? <div id=\"loader\" className=\"\"><p className=\"\">Username taken! Please try another</p></div>\n                 : <br />\n\n               }\n\n               {this.handleChangeRender()}\n\n            </main>\n        </header>\n      </div>\n      \n    );\n  }\n}\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}
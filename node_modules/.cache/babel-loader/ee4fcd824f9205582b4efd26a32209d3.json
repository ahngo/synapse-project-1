{"ast":null,"code":"var _jsxFileName = \"/Users/reuben/Desktop/school/osu/capstone/synapse-project/src/pages/home.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport '../App.css';\nimport '../css/home.css';\nimport Web3 from 'web3';\nimport { SYNAPSE_ABI, SYNAPSE_ADDRESS } from '../config';\nimport { PROFILE_ABI, PROFILE_ADDRESS } from '../config';\nimport { BIO_ABI, BIO_ADDRESS } from '../config';\nimport { USER_ABI, USER_ADDRESS } from '../config';\nimport Thought from '../createThought.js';\nimport Feed from '../feed.js';\n\nfunction isInstalled() {\n  if (typeof Web3 !== 'undefined') {\n    console.log('MetaMask is installed');\n  } else {\n    console.log('MetaMask is not installed');\n  }\n}\n\nfunction isLocked(web3) {\n  web3.eth.getAccounts(function (err, accounts) {\n    if (err != null) {\n      console.log(err);\n    } else if (accounts.length === 0) {\n      console.log('MetaMask is locked');\n    } else {\n      console.log('MetaMask is unlocked');\n    }\n  });\n}\n\nclass Home extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.getBioText();\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    document.title = \"My Synapse Feed\";\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n\n  async componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    isInstalled();\n    isLocked(web3);\n    const synapse = new web3.eth.Contract(SYNAPSE_ABI, SYNAPSE_ADDRESS);\n    const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS);\n    const bio = new web3.eth.Contract(BIO_ABI, BIO_ADDRESS);\n    this.setState({\n      profile\n    });\n    this.setState({\n      bio\n    });\n    const accounts = await web3.eth.getAccounts();\n    const balanceWei = await web3.eth.getBalance(accounts[0]);\n    var balance = balanceWei / 1000000000000000000;\n    this.setState({\n      account: accounts[0],\n      balance: balance\n    });\n    this.setState({\n      loading: false\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      balance: '',\n      myString: '',\n      thoughts: [],\n      handle: 0,\n      loading: true,\n      currentBio: \"Loading...\"\n    };\n    this.createThought = this.createThought.bind(this);\n    this.getBioText = this.getBioText.bind(this);\n  }\n\n  async refresh() {\n    this.forceUpdate();\n  }\n\n  createThought(string) {\n    //const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS)\n    this.setState({\n      loading: true\n    });\n    this.state.profile.methods.createThought(string).send({\n      from: this.state.account\n    }).once('receipt', receipt => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  async getBioText() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const bio = new web3.eth.Contract(BIO_ABI, BIO_ADDRESS);\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    bio.methods.getBio(accounts[0]).call({\n      from: accounts[0]\n    }).then(val => this.setState({\n      currentBio: val\n    }));\n  }\n\n  async getHandle() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const handle = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS);\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    handle.methods.getHandle(accounts[0]).call({\n      from: accounts[0]\n    }).then(val => this.setState({}));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \" Account: \", this.state.account, \" \"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \" @ \", this.state.handle, \" \"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"My Balance: \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \" \", this.state.balance)), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"My Bio: \", this.state.currentBio)), React.createElement(\"div\", {\n      class: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"div\", {\n      id: \"loader\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Communicating with blockchain...\")) : React.createElement(Thought, {\n      thoughts: this.state.thoughts,\n      createThought: this.createThought,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(Feed, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/reuben/Desktop/school/osu/capstone/synapse-project/src/pages/home.js"],"names":["React","Component","ReactDOM","Web3","SYNAPSE_ABI","SYNAPSE_ADDRESS","PROFILE_ABI","PROFILE_ADDRESS","BIO_ABI","BIO_ADDRESS","USER_ABI","USER_ADDRESS","Thought","Feed","isInstalled","console","log","isLocked","web3","eth","getAccounts","err","accounts","length","Home","componentWillMount","loadWeb3","loadBlockchainData","getBioText","forceUpdate","componentDidMount","document","title","window","ethereum","enable","currentProvider","alert","componentWillUnmount","clearInterval","interval","givenProvider","synapse","Contract","profile","bio","setState","balanceWei","getBalance","balance","account","loading","constructor","props","state","myString","thoughts","handle","currentBio","createThought","bind","refresh","string","methods","send","from","once","receipt","getBio","call","then","val","getHandle","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport '../App.css'\nimport '../css/home.css'\nimport Web3 from 'web3'\nimport { SYNAPSE_ABI, SYNAPSE_ADDRESS } from '../config'\nimport { PROFILE_ABI, PROFILE_ADDRESS } from '../config'\nimport { BIO_ABI, BIO_ADDRESS } from '../config'\nimport { USER_ABI, USER_ADDRESS } from '../config'\nimport Thought from '../createThought.js'\nimport Feed from '../feed.js'\n\n\nfunction isInstalled() {\n   if (typeof Web3 !== 'undefined'){\n      console.log('MetaMask is installed')\n   }\n   else{\n      console.log('MetaMask is not installed')\n   }\n}\n\nfunction isLocked(web3) {\n   web3.eth.getAccounts(function(err, accounts){\n      if (err != null) {\n         console.log(err)\n      }\n      else if (accounts.length === 0) {\n         console.log('MetaMask is locked')\n      }\n      else {\n         console.log('MetaMask is unlocked')\n      }\n   });\n}\n\nclass Home extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    await this.getBioText()\n    this.forceUpdate()\n  }\n\n  componentDidMount(){\n    document.title = \"My Synapse Feed\"\n\n\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n\n  async loadBlockchainData() {\n\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n\n    isInstalled();\n    isLocked(web3);\n\n    const synapse = new web3.eth.Contract(SYNAPSE_ABI, SYNAPSE_ADDRESS)\n    const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS)\n    const bio = new web3.eth.Contract(BIO_ABI, BIO_ADDRESS)\n\n    this.setState({ profile })\n    this.setState({ bio })\n\n    const accounts = await web3.eth.getAccounts()\n    const balanceWei = await web3.eth.getBalance(accounts[0])\n\n    var balance = balanceWei/1000000000000000000\n\n    this.setState({ account: accounts[0], balance: balance })\n    this.setState({ loading: false })\n\n  }\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      balance: '',\n      myString: '',\n      thoughts: [],\n      handle: 0,\n      loading: true,\n      currentBio: \"Loading...\"\n    }\n\n    this.createThought = this.createThought.bind(this)\n    this.getBioText = this.getBioText.bind(this)\n\n  }\n\n  async refresh() {\n    this.forceUpdate()\n  }\n\n  createThought(string) {\n\n      //const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS)\n\n      this.setState({ loading: true })\n      this.state.profile.methods.createThought(string).send({ from: this.state.account })\n      .once('receipt', (receipt) => {\n        this.setState({ loading: false })\n      })\n  }\n\n  async getBioText() {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n      const bio = new web3.eth.Contract(BIO_ABI, BIO_ADDRESS)\n      const accounts = await web3.eth.getAccounts()\n      this.setState({ account: accounts[0]})\n\n      bio.methods.getBio(accounts[0]).call({ from: accounts[0]}).then(val => this.setState({ currentBio: val }));\n\n  }\n\n  async getHandle() {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n      const handle = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS)\n      const accounts = await web3.eth.getAccounts()\n      this.setState({ account: accounts[0]})\n\n      handle.methods.getHandle(accounts[0]).call({ from: accounts[0]}).then(val => this.setState({ }))\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n          <section>\n            <div class=\"left\">\n              <h5> Account: {this.state.account} </h5>\n              <h5> @ { this.state.handle} </h5>\n              <h5>My Balance: <p> {this.state.balance}</p></h5>\n              <h5>My Bio: {this.state.currentBio}</h5>\n            </div>\n\n            <div class=\"right\">\n              { this.state.loading\n                ? <div id=\"loader\" className=\"\"><p className=\"\">Communicating with blockchain...</p></div>\n                : <Thought\n                  thoughts={this.state.thoughts}\n                  createThought={this.createThought}\n                  />\n              }\n\n              <span></span>\n\n              <Feed/>\n\n            </div>\n          </section>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}